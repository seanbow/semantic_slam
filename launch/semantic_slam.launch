<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <!-- Arguments -->
  <arg name="cam_topic"                           default="/zed/zed_node/rgb/image_rect_color"/>
  <arg name="raw_cam_topic"                       default="/zed/zed_node/rgb/relay" />
  <arg name="cam_info_topic"                      default="/zed/zed_node/rgb/camera_info"/>
  <arg name="image_transport"                     default="raw"/>

  <arg name="imu_topic"                           default="/zed/zed_node/imu/data_raw"/>
  <arg name="odom_topic"                          default="/zed/zed_node/odom"/>

  <arg name="global_frame"						            default="/odom"/>
  <arg name="robot_frame"							            default="/base_link"/>
  <arg name="imu_frame"							              default="/zed_imu_link"/>

  <arg name="calib_file"                          default="$(find semslam)/param/turtlebot.yaml"/>

  <arg name="detected_objects_topic"              default="/darknet_ros/bounding_boxes"/>
  <arg name="detected_objects_topic_republished"  default="bounding_boxes_republished"/>
  <arg name="keypoint_topic"                      default="img_keypoints"/>

  <arg name="yolo"                                default="true"/>

  <arg name="launch-args"                         default=""/>
  <arg name="launch-delay"                        default="30.0"/>

  <param name="/yolo"                             value="$(arg yolo)" type="bool"/>

  <node pkg="semantic_slam" type="semantic_slam_node" name="semantic_slam" output="screen"
            launch-prefix="" >
    <param name="odom_topic" value="$(arg odom_topic)" />
  </node>

  <!-- <node pkg="feature_tracker" type="feature_tracker_node" name="feature_tracker" 
        required="true" clear_params="true" output="screen" launch-prefix="" >
    <param name="cam_topic" value="$(arg cam_topic)" />
    <param name="cam_info_topic" value="$(arg cam_info_topic)" /> -->
    <!-- <param name="imu_topic" value="$(arg imu_topic)" type="str" /> -->
    <!-- <param name="use_2pt_ransac" value="false" type="bool" />
    <param name="image_transport" value="$(arg image_transport)" type="str" /> -->
    <!-- Camera calibration file -->
    <!-- <rosparam file="$(find semslam)/param/zed.yaml" />
  </node> -->

  <!-- Launch semantic SLAM node -->
  <!-- <node pkg="semslam" type="semslam_node" name="semslam" output="screen" required="true" launch-prefix="$(arg launch-args)"> 
    <param name="cam_topic"           value="$(arg raw_cam_topic)" type="str"/>
    <param name="odom_topic"          value="$(arg odom_topic)" type="str"/>
    <param name="keyframe_topic"      value="$(arg keypoint_topic)" type="str"/>
    <param name="image_transport"     value="$(arg image_transport)"/>
    <param name="keypoint_topic"      value="$(arg keypoint_topic)"/>

    <param name="global_frame"        value="$(arg global_frame)"/>
    <param name="robot_frame"         value="$(arg robot_frame)"/>
    <param name="imu_frame"           value="$(arg imu_frame)"/>

    <rosparam file="$(arg calib_file)"/>
  </node> -->

  <!-- Launch object detector -->
  <!-- Make sure to: 1) configure your launch file -->
  <!--               2) change the topic name for your camera in ros.yaml -->
  <!--               3) change enable_opencv to true and enable_console_output to false to suppress all printing -->
  <!--               4) use relative namespaces in ros.yaml -->
  <!-- <include file="$(find darknet_ros)/launch/yolo_v3_voc_indoor.launch"/> -->


    <!-- <include file="$(find darknet_ros)/launch/darknet_ros.launch">
        <arg name="image" value="$(arg raw_cam_topic)" />
        <arg name="ros_param_file"  value="$(find darknet_ros)/config/test.yaml"/>

        <arg name="network_param_file" value="$(find darknet_ros)/config/yolov3-voc-test.yaml" />
    </include> -->

  <!-- Launch detection republisher -->
  <!-- <node pkg="object_keypoint_detector" type="detection_republisher.py" name="detection_republisher" output="screen">
    <param name="detection_topic"						      value="$(arg detected_objects_topic)"/>
    <param name="detection_republished_topic"			value="$(arg detected_objects_topic_republished)"/>
</node> -->

  <!-- Launch keypoint detector -->
  <!-- <node name="keypoint_detector" pkg="object_keypoint_detector" type="keypoint_detector_torch.py" required="true" output="screen">

    <param name="image_topic"                   value="$(arg raw_cam_topic)"/>
    <remap from="pose_estimator/img_keypoints"  to="semslam/$(arg keypoint_topic)"/>
    <remap from="detected_objects"              to="$(arg detected_objects_topic_republished)"/>

    <param name="model_type"                    value="StackedHourglass"/>
    <param name="num_keypoints_file"            value="$(find object_keypoint_detector)/keypoint_description/num_keypoints_indoor.txt"/>
    <param name="model_path"                    value="$(find object_keypoint_detector)/models/model_20_multiple.t7"/>
  </node> -->

   <node name="republish_left"  type="republish" pkg="image_transport" 
        args="compressed in:=/zed/zed_node/rgb/image_rect_color 
              raw out:=$(arg raw_cam_topic)" />

    <node pkg="rosbag" type="play" name="rosbag_player" output="log" 
        args="--clock /mnt/data/turtlebot/2019-10-23-13-16-11.bag
              --delay 10" />

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find semslam)/rviz/test.rviz" />

</launch>
